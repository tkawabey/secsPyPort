#!/usr/bin/env python
# -*- coding: ISO-8859-1 -*-
# generated by wxGlade 0.4 on Sun Mar 05 15:43:02 2006

from wxPython.wx import *

class SECSLogViewerFrame(wxFrame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: SECSLogViewerFrame.__init__
        kwds["style"] = wxDEFAULT_FRAME_STYLE
        wxFrame.__init__(self, *args, **kwds)
        self.window_1 = wxSplitterWindow(self, -1, style=wxSP_3D|wxSP_BORDER)
        self.window_1_pane_2 = wxPanel(self.window_1, -1)
        self.window_1_pane_1 = wxPanel(self.window_1, -1)
        
        # Menu Bar
        self.SECSLogViewerFrame_menubar = wxMenuBar()
        self.SetMenuBar(self.SECSLogViewerFrame_menubar)
        global ID_OPEN; ID_OPEN = wxNewId()
        global ID_SAVE_FILE; ID_SAVE_FILE = wxNewId()
        global ID_EXIT; ID_EXIT = wxNewId()
        global IDM_ADD_DATA_ITEM; IDM_ADD_DATA_ITEM = wxNewId()
        global IDM_EDIT_DATA_ITEM; IDM_EDIT_DATA_ITEM = wxNewId()
        global IDM_DEL_DATA_ITEM; IDM_DEL_DATA_ITEM = wxNewId()
        global IDM_ALL_VIEW; IDM_ALL_VIEW = wxNewId()
        wxglade_tmp_menu = wxMenu()
        self.Open = wxMenuItem(wxglade_tmp_menu, ID_OPEN, "&Open\tCtrl-O", "Open Files", wxITEM_NORMAL)
        wxglade_tmp_menu.AppendItem(self.Open)
        self.saveFile = wxMenuItem(wxglade_tmp_menu, ID_SAVE_FILE, "&Save File\tCtrl-S", "Save File", wxITEM_NORMAL)
        wxglade_tmp_menu.AppendItem(self.saveFile)
        wxglade_tmp_menu.AppendSeparator()
        self.quit = wxMenuItem(wxglade_tmp_menu, ID_EXIT, "&Quit\tCtrl-Q", "Exit Applicarion", wxITEM_NORMAL)
        wxglade_tmp_menu.AppendItem(self.quit)
        self.SECSLogViewerFrame_menubar.Append(wxglade_tmp_menu, "File")
        wxglade_tmp_menu = wxMenu()
        self.menuAddDataItem = wxMenuItem(wxglade_tmp_menu, IDM_ADD_DATA_ITEM, "&Add Data Item\tCtrl A", "Add Data Item", wxITEM_NORMAL)
        wxglade_tmp_menu.AppendItem(self.menuAddDataItem)
        self.menuEditDataItem = wxMenuItem(wxglade_tmp_menu, IDM_EDIT_DATA_ITEM, "&Edit Data Itme\tCtrl+E", "Edit Data Item", wxITEM_NORMAL)
        wxglade_tmp_menu.AppendItem(self.menuEditDataItem)
        self.menuDelDataItem = wxMenuItem(wxglade_tmp_menu, IDM_DEL_DATA_ITEM, "&Delete Data Item\tCtrl D", "Delete Data Item", wxITEM_NORMAL)
        wxglade_tmp_menu.AppendItem(self.menuDelDataItem)
        self.SECSLogViewerFrame_menubar.Append(wxglade_tmp_menu, "&Edit")
        wxglade_tmp_menu = wxMenu()
        self.allView = wxMenuItem(wxglade_tmp_menu, IDM_ALL_VIEW, "View &All Item\tCtrl-A", "Data Items All View", wxITEM_NORMAL)
        wxglade_tmp_menu.AppendItem(self.allView)
        self.SECSLogViewerFrame_menubar.Append(wxglade_tmp_menu, "&View")
        # Menu Bar end
        self.SECSLogViewerFrame_statusbar = self.CreateStatusBar(1, 0)
        
        # Tool Bar
        self.SECSLogViewerFrame_toolbar = wxToolBar(self, -1)
        self.SetToolBar(self.SECSLogViewerFrame_toolbar)
        global ID_SAVE_FILE; ID_SAVE_FILE = wxNewId()
        self.SECSLogViewerFrame_toolbar.AddLabelTool(ID_OPEN, "OpenFIles", wxBitmap("openimg.GIF", wxBITMAP_TYPE_ANY), wxBitmap("openimg.GIF", wxBITMAP_TYPE_ANY), wxITEM_NORMAL, "Open Files", "Open Files")
        self.SECSLogViewerFrame_toolbar.AddLabelTool(ID_SAVE_FILE, "SaveFile", wxBitmap("savefile.GIF", wxBITMAP_TYPE_ANY), wxBitmap("savefile.GIF", wxBITMAP_TYPE_ANY), wxITEM_NORMAL, "SaveFile", "SaveFile")
        self.SECSLogViewerFrame_toolbar.AddSeparator()
        # Tool Bar end
        self.listXSECSDatasList = XSecsCmnCtrl.XSecsDatasList(self.window_1_pane_1, -1)
        self.logWindow = XSecsCmnCtrl.LogView(self.window_1_pane_2, -1)

        self.__set_properties()
        self.__do_layout()

        EVT_MENU(self, self.Open.GetId(), self.OnOpen)
        EVT_MENU(self, self.saveFile.GetId(), self.OnSaveFile)
        EVT_MENU(self, self.quit.GetId(), self.OnQuit)
        EVT_MENU(self, self.menuEditDataItem.GetId(), self.OnMenuEditDataItem)
        EVT_MENU(self, self.menuDelDataItem.GetId(), self.OnMenuDelDataItem)
        EVT_MENU(self, self.allView.GetId(), self.OnDataItemAllView)
        EVT_TOOL(self, ID_OPEN, self.OnOpen)
        EVT_TOOL(self, ID_SAVE_FILE, self.OnSaveFile)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: SECSLogViewerFrame.__set_properties
        self.SetTitle("SECSLogViewer")
        self.SetSize((804, 480))
        self.SECSLogViewerFrame_statusbar.SetStatusWidths([-1])
        # statusbar fields
        SECSLogViewerFrame_statusbar_fields = ["frame_1_statusbar"]
        for i in range(len(SECSLogViewerFrame_statusbar_fields)):
            self.SECSLogViewerFrame_statusbar.SetStatusText(SECSLogViewerFrame_statusbar_fields[i], i)
        self.SECSLogViewerFrame_toolbar.Realize()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: SECSLogViewerFrame.__do_layout
        sizer_1 = wxBoxSizer(wxVERTICAL)
        sizer_3 = wxBoxSizer(wxHORIZONTAL)
        sizer_2 = wxBoxSizer(wxHORIZONTAL)
        sizer_2.Add(self.listXSECSDatasList, 1, wxEXPAND, 0)
        self.window_1_pane_1.SetAutoLayout(True)
        self.window_1_pane_1.SetSizer(sizer_2)
        sizer_2.Fit(self.window_1_pane_1)
        sizer_2.SetSizeHints(self.window_1_pane_1)
        sizer_3.Add(self.logWindow, 1, wxEXPAND, 0)
        self.window_1_pane_2.SetAutoLayout(True)
        self.window_1_pane_2.SetSizer(sizer_3)
        sizer_3.Fit(self.window_1_pane_2)
        sizer_3.SetSizeHints(self.window_1_pane_2)
        self.window_1.SplitHorizontally(self.window_1_pane_1, self.window_1_pane_2)
        sizer_1.Add(self.window_1, 1, wxEXPAND, 0)
        self.SetAutoLayout(True)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def OnOpen(self, event): # wxGlade: SECSLogViewerFrame.<event_handler>
        print "Event handler `OnOpen' not implemented!"
        event.Skip()

    def OnSaveFile(self, event): # wxGlade: SECSLogViewerFrame.<event_handler>
        print "Event handler `OnSaveFile' not implemented!"
        event.Skip()

    def OnQuit(self, event): # wxGlade: SECSLogViewerFrame.<event_handler>
        print "Event handler `OnQuit' not implemented!"
        event.Skip()

    def OnMenuEditDataItem(self, event): # wxGlade: SECSLogViewerFrame.<event_handler>
        print "Event handler `OnMenuEditDataItem' not implemented!"
        event.Skip()

    def OnMenuDelDataItem(self, event): # wxGlade: SECSLogViewerFrame.<event_handler>
        print "Event handler `OnMenuDelDataItem' not implemented!"
        event.Skip()

    def OnDataItemAllView(self, event): # wxGlade: SECSLogViewerFrame.<event_handler>
        print "Event handler `OnDataItemAllView' not implemented!"
        event.Skip()

    def OnOpen(self, event): # wxGlade: SECSLogViewerFrame.<event_handler>
        print "Event handler `OnOpen' not implemented!"
        event.Skip()

    def OnSaveFile(self, event): # wxGlade: SECSLogViewerFrame.<event_handler>
        print "Event handler `OnSaveFile' not implemented!"
        event.Skip()

# end of class SECSLogViewerFrame


class SecsDataEditFrame(wxFrame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: SecsDataEditFrame.__init__
        kwds["style"] = wxDEFAULT_FRAME_STYLE
        wxFrame.__init__(self, *args, **kwds)
        self.notebook_1 = wxNotebook(self, -1, style=0)
        self.notebook_1_pane_1 = wxPanel(self.notebook_1, -1)
        self.tree_ctrl_1 = wxTreeCtrl(self, -1, style=wxTR_HAS_BUTTONS|wxTR_LINES_AT_ROOT|wxTR_DEFAULT_STYLE|wxSUNKEN_BORDER)
        self.text_ctrl_2 = wxTextCtrl(self.notebook_1_pane_1, -1, "", style=wxTE_MULTILINE)
        self.buttonAdd = wxButton(self.notebook_1_pane_1, -1, "Add")
        self.buttonDelete = wxButton(self.notebook_1_pane_1, -1, "Delete")
        self.buttonUp = wxButton(self.notebook_1_pane_1, -1, "Up")
        self.buttonDown = wxButton(self.notebook_1_pane_1, -1, "Down")
        self.buttonApply = wxButton(self.notebook_1_pane_1, -1, "Apply", style=wxBU_TOP)
        self.buttonClose = wxButton(self.notebook_1_pane_1, -1, "Close")

        self.__set_properties()
        self.__do_layout()

        EVT_TREE_SEL_CHANGED(self, self.tree_ctrl_1.GetId(), self.OnSelChanged)
        EVT_BUTTON(self, self.buttonAdd.GetId(), self.OnAdd)
        EVT_BUTTON(self, self.buttonDelete.GetId(), self.OnDelete)
        EVT_BUTTON(self, self.buttonUp.GetId(), self.OnUp)
        EVT_BUTTON(self, self.buttonDown.GetId(), self.OnDown)
        EVT_BUTTON(self, self.buttonApply.GetId(), self.OnApply)
        EVT_BUTTON(self, self.buttonClose.GetId(), self.OnClose)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: SecsDataEditFrame.__set_properties
        self.SetTitle("SECS Data Edit")
        self.text_ctrl_2.SetMinSize((270, 60))
        self.buttonAdd.SetMinSize((50, -1))
        self.buttonDelete.SetMinSize((50, -1))
        self.buttonUp.SetMinSize((50, -1))
        self.buttonDown.SetMinSize((50, -1))
        self.buttonApply.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: SecsDataEditFrame.__do_layout
        sizer_4 = wxBoxSizer(wxVERTICAL)
        sizer_5 = wxBoxSizer(wxHORIZONTAL)
        sizer_6 = wxBoxSizer(wxVERTICAL)
        sizer_7 = wxBoxSizer(wxHORIZONTAL)
        sizer_10 = wxBoxSizer(wxVERTICAL)
        sizer_11 = wxBoxSizer(wxHORIZONTAL)
        sizer_5.Add(self.tree_ctrl_1, 1, wxEXPAND, 0)
        sizer_6.Add(self.text_ctrl_2, 0, wxEXPAND|wxADJUST_MINSIZE, 0)
        sizer_6.Add((20, 10), 0, wxEXPAND|wxADJUST_MINSIZE, 0)
        sizer_11.Add(self.buttonAdd, 0, wxADJUST_MINSIZE, 0)
        sizer_11.Add((20, 20), 0, wxADJUST_MINSIZE, 0)
        sizer_11.Add(self.buttonDelete, 0, wxADJUST_MINSIZE, 0)
        sizer_11.Add((20, 20), 0, wxADJUST_MINSIZE, 0)
        sizer_11.Add(self.buttonUp, 0, wxADJUST_MINSIZE, 0)
        sizer_11.Add((20, 20), 0, wxADJUST_MINSIZE, 0)
        sizer_11.Add(self.buttonDown, 0, wxADJUST_MINSIZE, 0)
        sizer_10.Add(sizer_11, 1, wxEXPAND|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0)
        sizer_10.Add((20, 20), 0, wxEXPAND|wxADJUST_MINSIZE, 0)
        sizer_10.Add(self.buttonApply, 0, wxEXPAND|wxADJUST_MINSIZE, 0)
        sizer_10.Add((20, 20), 0, wxEXPAND|wxADJUST_MINSIZE, 0)
        sizer_10.Add(self.buttonClose, 0, wxEXPAND|wxADJUST_MINSIZE, 0)
        sizer_10.Add((20, 20), 0, wxEXPAND|wxADJUST_MINSIZE, 0)
        sizer_7.Add(sizer_10, 1, wxEXPAND|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0)
        sizer_6.Add(sizer_7, 1, wxEXPAND|wxADJUST_MINSIZE, 0)
        self.notebook_1_pane_1.SetAutoLayout(True)
        self.notebook_1_pane_1.SetSizer(sizer_6)
        sizer_6.Fit(self.notebook_1_pane_1)
        sizer_6.SetSizeHints(self.notebook_1_pane_1)
        self.notebook_1.AddPage(self.notebook_1_pane_1, "tab1")
        sizer_5.Add(self.notebook_1, 1, wxEXPAND, 0)
        sizer_4.Add(sizer_5, 1, wxEXPAND, 0)
        self.SetAutoLayout(True)
        self.SetSizer(sizer_4)
        sizer_4.Fit(self)
        sizer_4.SetSizeHints(self)
        self.Layout()
        # end wxGlade

    def OnSelChanged(self, event): # wxGlade: SecsDataEditFrame.<event_handler>
        print "Event handler `OnSelChanged' not implemented!"
        event.Skip()

    def OnAdd(self, event): # wxGlade: SecsDataEditFrame.<event_handler>
        print "Event handler `OnAdd' not implemented!"
        event.Skip()

    def OnDelete(self, event): # wxGlade: SecsDataEditFrame.<event_handler>
        print "Event handler `OnDelete' not implemented!"
        event.Skip()

    def OnUp(self, event): # wxGlade: SecsDataEditFrame.<event_handler>
        print "Event handler `OnUp' not implemented!"
        event.Skip()

    def OnDown(self, event): # wxGlade: SecsDataEditFrame.<event_handler>
        print "Event handler `OnDown' not implemented!"
        event.Skip()

    def OnApply(self, event): # wxGlade: SecsDataEditFrame.<event_handler>
        print "Event handler `OnApply' not implemented!"
        event.Skip()

    def OnClose(self, event): # wxGlade: SecsDataEditFrame.<event_handler>
        print "Event handler `OnClose' not implemented!"
        event.Skip()

# end of class SecsDataEditFrame


class SecsDataItemDialog(wxDialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: SecsDataItemDialog.__init__
        kwds["style"] = wxDEFAULT_DIALOG_STYLE
        wxDialog.__init__(self, *args, **kwds)
        self.radio_box_1 = wxRadioBox(self, -1, "Data types", choices=["List", "Binary", "Bool", "Ascii", "JIS", "UTF16", "UINT1", "UINT2", "UINT4", "UINT8", "INT1", "INT2", "INT4", "INT8", "Float4", "Float8"], majorDimension=4, style=wxRA_SPECIFY_ROWS)
        self.buttonOK = wxButton(self, -1, "OK")
        self.buttonCansel = wxButton(self, -1, "Cansel")

        self.__set_properties()
        self.__do_layout()

        EVT_BUTTON(self, self.buttonOK.GetId(), self.OnOK)
        EVT_BUTTON(self, self.buttonCansel.GetId(), self.OnCansel)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: SecsDataItemDialog.__set_properties
        self.SetTitle("SecsDataItem")
        self.radio_box_1.SetSelection(0)
        self.buttonOK.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: SecsDataItemDialog.__do_layout
        sizer_8 = wxBoxSizer(wxVERTICAL)
        sizer_9 = wxBoxSizer(wxHORIZONTAL)
        sizer_8.Add(self.radio_box_1, 0, wxADJUST_MINSIZE, 0)
        sizer_9.Add(self.buttonOK, 0, wxADJUST_MINSIZE, 0)
        sizer_9.Add(self.buttonCansel, 0, wxADJUST_MINSIZE, 0)
        sizer_8.Add(sizer_9, 1, wxEXPAND, 0)
        self.SetAutoLayout(True)
        self.SetSizer(sizer_8)
        sizer_8.Fit(self)
        sizer_8.SetSizeHints(self)
        self.Layout()
        # end wxGlade

    def OnOK(self, event): # wxGlade: SecsDataItemDialog.<event_handler>
        print "Event handler `OnOK' not implemented!"
        event.Skip()

    def OnCansel(self, event): # wxGlade: SecsDataItemDialog.<event_handler>
        print "Event handler `OnCansel' not implemented!"
        event.Skip()

# end of class SecsDataItemDialog


class SECSLogViewerApp(wxApp):
    def OnInit(self):
        wxInitAllImageHandlers()
        SECSLogViewer = SECSLogViewerFrame(None, -1, "")
        self.SetTopWindow(SECSLogViewer)
        SECSLogViewer.Show()
        return 1

# end of class SECSLogViewerApp

if __name__ == "__main__":
    SECSLogViewer = SECSLogViewerApp(0)
    SECSLogViewer.MainLoop()
